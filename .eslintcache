[{"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\index.js":"1","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\App.js":"2","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\reportWebVitals.js":"3","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Components\\Header\\Header.js":"4","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Components\\Navbar\\Navbar.js":"5","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Home\\Home\\Home.js":"6","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Home\\CarouselHome\\CarouselHome.js":"7","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Home\\BestMovieHome\\BestMovieHome.js":"8","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Reducer\\index.js":"9","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Reducer\\authReducer.js":"10","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Action\\index.js":"11","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Action\\authAction.js":"12","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Helpers\\index.js":"13","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Auth\\Register\\Register.js":"14","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Auth\\Login\\Login.js":"15","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Status\\Unverified\\Unverified.js":"16","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Status\\Verified\\Verified.js":"17","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Auth\\ChangePassword\\ChangePassword.js":"18","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\Auth\\Login\\LoginAdmin.js":"19","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\serviceWorker.js":"20","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\Home\\HomeAdmin.js":"21","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Components\\Navbar\\Navbar.js":"22","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\Profile\\ProfileAdmin.js":"23","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Action\\adminProfileAction.js":"24","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Reducer\\adminProfileReducer.js":"25","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Reducer\\manageMoviesReducer.js":"26","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Action\\manageMoviesAction.js":"27","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\ManageMovies\\AddMovies\\addMovies.js":"28","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\ManageMovies\\Movies\\movies.js":"29","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\ManageMovies\\EditMovies\\EditMovies.js":"30","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\ManageMovies\\EditMovies\\editMovies.js":"31","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Movie\\NowPlaying.js":"32","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\DetailMovie\\DetailMovie.js":"33"},{"size":861,"mtime":1608953869631,"results":"34","hashOfConfig":"35"},{"size":3686,"mtime":1610456737379,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":2216,"mtime":1608375602564,"results":"38","hashOfConfig":"35"},{"size":6578,"mtime":1608860761867,"results":"39","hashOfConfig":"35"},{"size":573,"mtime":1608375776408,"results":"40","hashOfConfig":"35"},{"size":1848,"mtime":1608374766092,"results":"41","hashOfConfig":"35"},{"size":2292,"mtime":1610355421906,"results":"42","hashOfConfig":"35"},{"size":335,"mtime":1609831030760,"results":"43","hashOfConfig":"35"},{"size":1387,"mtime":1609851279765,"results":"44","hashOfConfig":"35"},{"size":107,"mtime":1609827720886,"results":"45","hashOfConfig":"35"},{"size":7897,"mtime":1609309858721,"results":"46","hashOfConfig":"35"},{"size":48,"mtime":1608534100966,"results":"47","hashOfConfig":"35"},{"size":6449,"mtime":1608613277613,"results":"48","hashOfConfig":"35"},{"size":3419,"mtime":1609309357581,"results":"49","hashOfConfig":"35"},{"size":1783,"mtime":1608952746555,"results":"50","hashOfConfig":"35"},{"size":1697,"mtime":1608952448879,"results":"51","hashOfConfig":"35"},{"size":5294,"mtime":1608869034134,"results":"52","hashOfConfig":"35"},{"size":3475,"mtime":1609314799826,"results":"53","hashOfConfig":"35"},{"size":5086,"mtime":1608953797173,"results":"54","hashOfConfig":"35"},{"size":648,"mtime":1609859322478,"results":"55","hashOfConfig":"35"},{"size":3052,"mtime":1609830030992,"results":"56","hashOfConfig":"35"},{"size":8020,"mtime":1609850674789,"results":"57","hashOfConfig":"35"},{"size":4589,"mtime":1609834578222,"results":"58","hashOfConfig":"35"},{"size":529,"mtime":1609753851268,"results":"59","hashOfConfig":"35"},{"size":1008,"mtime":1610520148687,"results":"60","hashOfConfig":"35"},{"size":7681,"mtime":1610524933393,"results":"61","hashOfConfig":"35"},{"size":16105,"mtime":1610255330776,"results":"62","hashOfConfig":"35"},{"size":4159,"mtime":1610255711897,"results":"63","hashOfConfig":"35"},{"size":7865,"mtime":1609919413067,"results":"64","hashOfConfig":"35"},{"size":8277,"mtime":1610147961972,"results":"65","hashOfConfig":"35"},{"size":4824,"mtime":1610524035327,"results":"66","hashOfConfig":"35"},{"size":7169,"mtime":1610523789782,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1waw4by",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\index.js",[],["140","141"],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\App.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\reportWebVitals.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Components\\Header\\Header.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Components\\Navbar\\Navbar.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Home\\Home\\Home.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Home\\CarouselHome\\CarouselHome.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Home\\BestMovieHome\\BestMovieHome.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Reducer\\index.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Reducer\\authReducer.js",["142"],"const INITIAL_STATE = {\r\n    dataUser: [],\r\n    dataAdmin: [],\r\n    iduser: 0,\r\n    email: '',\r\n    username: '',\r\n    oldPassword: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    role: '',\r\n    status: '',\r\n\r\n    showOldPassword: false,\r\n    showPassword: false,\r\n    showConfirmPassword: false,\r\n\r\n    validMail: false,\r\n    borderMail: false,\r\n    showReqMail: false,\r\n\r\n    char: false,\r\n    num: false,\r\n    upper: false,\r\n    border: false,\r\n    showReq: false,\r\n\r\n    redirectLogin: false\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'USER_SUCCESS':\r\n            return {\r\n                ...state,\r\n                dataUser: action.payload,\r\n            }\r\n        case 'ADMIN_SUCCESS':\r\n            return {\r\n                ...state,\r\n                dataAdmin: action.payload,\r\n                role: action.payload.role\r\n            }\r\n        case 'INPUT_SUCCESS':\r\n            return {\r\n                ...state,\r\n                [action.payload.property]: action.payload.value,\r\n            }\r\n        case 'REDIRECT_LOGIN':\r\n            return {\r\n                ...state,\r\n                redirectLogin: action.payload\r\n            }\r\n        case 'USER_FAIL':\r\n            return INITIAL_STATE\r\n        case 'ADMIN_FAIL':\r\n            return INITIAL_STATE\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Action\\index.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Action\\authAction.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Helpers\\index.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Auth\\Register\\Register.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Auth\\Login\\Login.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Status\\Unverified\\Unverified.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Status\\Verified\\Verified.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Auth\\ChangePassword\\ChangePassword.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\Auth\\Login\\LoginAdmin.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\serviceWorker.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\Home\\HomeAdmin.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Components\\Navbar\\Navbar.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\Profile\\ProfileAdmin.js",["143"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAdminProfile, getAdminProfileByUser, addAdminProfile, editAdminProfile } from '../../../Redux/Action';\r\nimport ImgProfile from '../../Assets/AkunImage.png';\r\nimport { MDBContainer } from 'mdbreact';\r\nimport './ProfileAdmin.css';\r\nimport { API_URL } from '../../../Helpers';\r\n\r\n\r\nclass ProfileAdmin extends Component {\r\n\r\n    state = {\r\n        fullname: '',\r\n        nickname: '',\r\n        imageprofile: null,\r\n        previewImage: null,\r\n        changeImage: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAdminProfile();\r\n        this.props.getAdminProfileByUser();\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.onBtnAdmin();\r\n        }\r\n    }\r\n\r\n    onChangeImg = (e) => {\r\n        if (e.target.files[0]) {\r\n            this.setState({\r\n                changeImage: true,\r\n                imageprofile: e.target.files[0],\r\n                previewImage: URL.createObjectURL(e.target.files[0])\r\n            })\r\n        }\r\n    }\r\n\r\n    onBtnAdmin = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.props.dataAdminProfile.length === 0) {\r\n            let reset = '#form-profile-admin';\r\n            let fullname = this.state.fullname;\r\n            let nickname = this.state.nickname;\r\n            let { imageprofile } = this.state;\r\n            let dataProfileAdmin = { fullname, nickname }\r\n            if (this.props.dataAdminProfile.length >= 1) {\r\n                this.props.editAdminProfile(dataProfileAdmin, imageprofile);\r\n            } else {\r\n                this.props.addAdminProfile(dataProfileAdmin, imageprofile, reset);\r\n            }\r\n        } else {\r\n            this.props.dataAdminProfile.map((item, index) => {\r\n                let fullname = this.state.fullname === '' ? item.fullname : this.state.fullname;\r\n                let nickname = this.state.nickname === '' ? item.nickname : this.state.nickname;\r\n                let changeImage = this.state.changeImage;\r\n                let imageprofile = this.state.imageprofile === null ? API_URL + item.imageprofile : this.state.imageprofile;\r\n                let dataProfileAdmin = { fullname, nickname, changeImage }\r\n                if (this.props.dataAdminProfile.length >= 1) {\r\n                    this.props.editAdminProfile(dataProfileAdmin, imageprofile);\r\n                } else {\r\n                    this.props.addAdminProfile(dataProfileAdmin, imageprofile);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card-profile-admin\">\r\n                    <div className=\"title-profile-admin\">Welcome Profile, {this.props.nickname}!</div>\r\n                    <MDBContainer>\r\n                        <div className=\"form-profile-admin\">Input full your identity for account as admin!</div>\r\n                        <br />\r\n                        <div className=\"input-profile-admin\">\r\n                            {\r\n                                this.props.dataAdminProfile.length > 0\r\n                                    ?\r\n                                    this.props.dataAdminProfile.map((item, index) => {\r\n                                        return (\r\n                                            <div className=\"left-profile-admin\" key={index}>\r\n                                                <div className=\"form-group\">\r\n                                                    {\r\n                                                        this.state.changeImage\r\n                                                            ?\r\n                                                            <img src={this.state.previewImage} alt=\"img-profile\" className=\"img-profile\" />\r\n                                                            :\r\n                                                            <img src={API_URL + item.imageprofile === null ? ImgProfile : API_URL + item.imageprofile} alt=\"img-profile\" className=\"img-profile\" />\r\n                                                    }\r\n                                                    <div className=\"img-input\">\r\n                                                        <input type=\"file\" onChange={this.onChangeImg} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Fullname</label>\r\n                                                    <input type=\"text\" defaultValue={item.fullname} className=\"form-control form-control-sm\" onChange={(e) => this.setState({ fullname: e.target.value })} onKeyPress={this.onKeyPress} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Nickname</label>\r\n                                                    <input type=\"text\" defaultValue={item.nickname} className=\"form-control form-control-sm\" onChange={(e) => this.setState({ nickname: e.target.value })} />\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                    :\r\n                                    <form className=\"left-profile-admin\" id=\"form-profile-admin\">\r\n                                        <div className=\"form-group\">\r\n                                            {\r\n                                                this.state.changeImage\r\n                                                    ?\r\n                                                    <img src={this.state.previewImage} alt=\"img-profile\" className=\"img-profile\" />\r\n                                                    :\r\n                                                    <img src={ImgProfile} alt=\"img-profile\" className=\"img-profile\" />\r\n                                            }\r\n                                            <div className=\"img-input\">\r\n                                                <input type=\"file\" onChange={this.onChangeImg} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Fullname</label>\r\n                                            <input type=\"text\" className=\"form-control form-control-sm\" onChange={(e) => this.setState({ fullname: e.target.value })} onKeyPress={this.onKeyPress} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Nickname</label>\r\n                                            <input type=\"text\" className=\"form-control form-control-sm\" onChange={(e) => this.setState({ nickname: e.target.value })} />\r\n                                        </div>\r\n                                    </form>\r\n                            }\r\n                            <div className=\"\">\r\n                                <button className=\"btn btn-primary btn-sm\" id=\"btn-profile-admin\" onClick={this.onBtnAdmin}>SUBMIT</button>\r\n                            </div>\r\n                        </div>\r\n                    </MDBContainer>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStatetoProps = ({ adminProfile }) => {\r\n    return {\r\n        dataAdminProfile: adminProfile.dataAdminProfile,\r\n        dataAdminProfileByUser: adminProfile.dataAdminProfileByUser,\r\n        nickname: adminProfile.dataAdminProfileByUser.nickname\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, { getAdminProfile, getAdminProfileByUser, addAdminProfile, editAdminProfile })(ProfileAdmin);","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Action\\adminProfileAction.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Reducer\\adminProfileReducer.js",["144"],"const INITIAL_STATE = {\r\n    dataAdminProfile: [],\r\n    dataAdminProfileByUser: []\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'DATA_PROFILEADMIN_SUCCESS':\r\n            return { ...state, dataAdminProfile: action.payload }\r\n        case 'DATA_PROFILEADMIN_BYUSER_SUCCESS':\r\n            return { ...state, dataAdminProfileByUser: action.payload }\r\n        case 'DATA_PROFILEADMIN_FAIL':\r\n            return INITIAL_STATE\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Reducer\\manageMoviesReducer.js",["145"],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Redux\\Action\\manageMoviesAction.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\ManageMovies\\AddMovies\\addMovies.js",["146","147","148","149","150","151","152","153"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './addMovies.css';\r\nimport NoImg from '../../../Assets/NoImage.png';\r\nimport { addMovies } from '../../../../Redux/Action';\r\nimport { MDBIcon } from 'mdbreact';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nclass AddMovies extends Component {\r\n\r\n    state = {\r\n        showStep1: false,\r\n        changeInput: false,\r\n        input: [],\r\n\r\n        imageMovies: null,\r\n        previewImage: null,\r\n        changeImage: false,\r\n\r\n        errorStep1: '',\r\n        errorImage: '',\r\n\r\n        title: '',\r\n        duration: 0,\r\n        genre: '',\r\n        synopsis: '',\r\n\r\n        casts: '',\r\n        casts0: '',\r\n        casts1: '',\r\n        casts2: '',\r\n        casts3: '',\r\n        producer: '',\r\n        director: '',\r\n        writter: '',\r\n\r\n        showValidate: false\r\n    }\r\n\r\n    onChangeImg = (e) => {\r\n        if (e.target.files[0]) {\r\n            this.setState({\r\n                changeImage: true,\r\n                imageMovies: e.target.files[0],\r\n                previewImage: URL.createObjectURL(e.target.files[0])\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeInput = () => {\r\n        const { casts0, casts1, casts2, casts3 } = this.state;\r\n        if (casts0) {\r\n            this.setState({ changeInput: true, casts: `${casts0}${casts1 ? ',' : ''} ${casts1}${casts2 ? ',' : ''} ${casts2}${casts3 ? ',' : ''} ${casts3}` })\r\n        } else {\r\n            alert('Input invalid!')\r\n        }\r\n    }\r\n\r\n    onBackInput = () => {\r\n        this.setState({ changeInput: false, casts0: this.state.casts0, casts1: this.state.casts1, casts2: this.state.casts2, casts3: this.state.casts3 })\r\n    }\r\n\r\n    onBtnAddInput = () => {\r\n        let html =\r\n            <div className=\"title-edit-movies\">\r\n                <label></label><div style={{ marginRight: '1%' }}>:</div>\r\n                <input type=\"text\" className=\"form-control form-control-sm\" defaultValue={this.state.casts1} placeholder=\"Casts our movies ?\" onChange={(e) => this.setState({ casts1: e.target.value })} />\r\n            </div>\r\n        let html2 =\r\n            < div className=\"title-edit-movies\" >\r\n                <label></label><div style={{ marginRight: '1%' }}>:</div>\r\n                <input type=\"text\" className=\"form-control form-control-sm\" defaultValue={this.state.casts2} placeholder=\"Casts our movies ?\" onChange={(e) => this.setState({ casts2: e.target.value })} />\r\n            </div >\r\n        let html3 =\r\n            <div className=\"title-edit-movies\">\r\n                <label></label><div style={{ marginRight: '1%' }}>:</div>\r\n                <input type=\"text\" className=\"form-control form-control-sm\" defaultValue={this.state.casts3} placeholder=\"Casts our movies ?\" onChange={(e) => this.setState({ casts3: e.target.value })} />\r\n            </div>\r\n        if (this.state.input.length === 0) {\r\n            this.state.input.push(html)\r\n            this.setState({ input: this.state.input })\r\n        } else if (this.state.input.length === 1) {\r\n            this.state.input.push(html2)\r\n            this.setState({ input: this.state.input })\r\n        } else if (this.state.input.length === 2) {\r\n            this.state.input.push(html3)\r\n            this.setState({ input: this.state.input })\r\n        }\r\n    }\r\n\r\n    onBtnNext = (e) => {\r\n        e.preventDefault();\r\n\r\n        let { imageMovies } = this.state;\r\n        let title = this.state.title;\r\n        let duration = this.state.duration;\r\n        let genre = this.state.genre;\r\n        let synopsis = this.state.synopsis;\r\n        if (title && duration && genre && synopsis) {\r\n            if (imageMovies) {\r\n                Swal.fire({ icon: 'success', timer: 1000, showConfirmButton: false })\r\n                this.setState({ showStep1: true, showValidate: false, errorStep1: '', errorImage: '' })\r\n            } else {\r\n                Swal.fire({ title: 'Upload image!', icon: 'warning', timer: 1000, showConfirmButton: false })\r\n            }\r\n        } else {\r\n            this.setState({ showValidate: true, errorStep1: 'Input data in correctly!' })\r\n        }\r\n    }\r\n\r\n    onBtnSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let { imageMovies } = this.state;\r\n        let title = this.state.title;\r\n        let duration = this.state.duration;\r\n        let genre = this.state.genre;\r\n        let synopsis = this.state.synopsis;\r\n        let casts = this.state.casts;\r\n        let producer = this.state.producer;\r\n        let director = this.state.director;\r\n        let writter = this.state.writter;\r\n        let dataMovies = {\r\n            title, duration: parseInt(duration), genre, synopsis, casts, producer, director, writter\r\n        }\r\n        if (title && duration && genre && synopsis && casts && producer && director && writter) {\r\n            this.props.addMovies(dataMovies, imageMovies);\r\n        } else {\r\n            this.setState({ showValidate: true, errorStep1: 'Input data in correctly!' })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { casts0, casts1, casts2, casts3, title, duration, genre, synopsis, casts, producer, director, writter } = this.state;\r\n        if (this.props.redirectMovies) {\r\n            return (\r\n                <Redirect to=\"/managemovies\"></Redirect>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"body-manage-movies\">\r\n                <div className=\"card-manage-movies\">\r\n                    <div className=\"arrowback-manage-movies\">\r\n                        <Link to=\"managemovies\">\r\n                            <MDBIcon icon=\"arrow-left\" />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"title-manage-movies\">Manage Our Movies</div>\r\n                    <form className=\"form-manage-movies\">\r\n                        {\r\n                            this.state.changeImage\r\n                                ?\r\n                                <div>\r\n                                    <h3 style={{ color: 'red' }}>{this.state.showValidate ? this.state.errorImage : ''}</h3>\r\n                                    <img src={this.state.previewImage} alt=\"no-img\" className=\"no-img\" />\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    <h3 style={{ color: 'red' }}>{this.state.showValidate ? this.state.errorImage : ''}</h3>\r\n                                    <img src={NoImg} alt=\"no-img\" className=\"no-img\" />\r\n                                </div>\r\n                        }\r\n                        <div>\r\n                            <input type=\"file\" className=\"file-manage-movies\" onChange={this.onChangeImg} />\r\n                        </div>\r\n                        <h3 style={{ color: 'red' }}>{this.state.showValidate ? this.state.errorStep1 : ''}</h3>\r\n                        {\r\n                            this.state.showStep1\r\n                                ?\r\n                                <div>\r\n                                    {\r\n                                        this.state.changeInput\r\n                                            ?\r\n                                            <div className=\"title-edit-movies\">\r\n                                                <label>Casts</label><div style={{ marginRight: '1%' }}>:</div>\r\n                                                <input type=\"text\" value={`${casts0}${casts1 ? ',' : ''} ${casts1}${casts2 ? ',' : ''} ${casts2}${casts3 ? ',' : ''} ${casts3}`} className=\"form-control form-control-sm\" placeholder=\"Casts our movies ?\" />\r\n                                                <MDBIcon icon=\"cog\" className=\"add-input-casts\" onClick={this.onBackInput}></MDBIcon>\r\n                                            </div>\r\n                                            :\r\n                                            <div>\r\n                                                <div className=\"title-edit-movies\">\r\n                                                    <label>Casts</label><div style={{ marginRight: '1%' }}>:</div>\r\n                                                    <input style={this.state.showValidate ? { borderColor: this.state.casts ? null : 'red' } : null} type=\"text\" className=\"form-control form-control-sm\" defaultValue={this.state.casts0} placeholder=\"Casts our movies ?\" onChange={(e) => this.setState({ casts0: e.target.value })} />\r\n                                                    {\r\n                                                        this.state.input.length === 3\r\n                                                            ?\r\n                                                            <div>\r\n                                                                <MDBIcon icon=\"check\" className=\"add-input-casts\" onClick={this.onChangeInput}></MDBIcon>\r\n                                                            </div>\r\n                                                            :\r\n                                                            <div style={{ display: 'flex' }}>\r\n                                                                <MDBIcon icon=\"plus\" className=\"add-input-casts\" onClick={this.onBtnAddInput}></MDBIcon>\r\n                                                                <MDBIcon icon=\"check\" className=\"add-input-casts\" onClick={this.onChangeInput}></MDBIcon>\r\n                                                            </div>\r\n                                                    }\r\n                                                </div>\r\n                                                {this.state.input.map((item) => {\r\n                                                    return (\r\n                                                        <div style={{ marginBottom: '1%' }}>\r\n                                                            {item}\r\n                                                        </div>\r\n                                                    )\r\n                                                })}\r\n                                            </div>\r\n                                    }\r\n                                    <div className=\"title-edit-movies\">\r\n                                        <label>Producer</label><div style={{ marginRight: '1%' }}>:</div>\r\n                                        <input style={this.state.showValidate ? { borderColor: this.state.producer ? null : 'red' } : null} type=\"text\" className=\"form-control form-control-sm\" value={this.state.producer} placeholder=\"Producer our movies ?\" onChange={(e) => this.setState({ producer: e.target.value })} />\r\n                                    </div>\r\n                                    <div className=\"title-edit-movies\">\r\n                                        <label>Director</label><div style={{ marginRight: '1%' }}>:</div>\r\n                                        <input style={this.state.showValidate ? { borderColor: this.state.director ? null : 'red' } : null} type=\"text\" className=\"form-control form-control-sm\" value={this.state.director} placeholder=\"Director our movies ?\" onChange={(e) => this.setState({ director: e.target.value })} />\r\n                                    </div>\r\n                                    <div className=\"title-edit-movies\">\r\n                                        <label>Writter</label><div style={{ marginRight: '1%' }}>:</div>\r\n                                        <input style={this.state.showValidate ? { borderColor: this.state.writter ? null : 'red' } : null} type=\"text\" className=\"form-control form-control-sm\" value={this.state.writter} placeholder=\"Writter our movies ?\" onChange={(e) => this.setState({ writter: e.target.value })} />\r\n                                    </div>\r\n                                    <hr />\r\n                                    <center>\r\n                                        <button style={{ marginRight: '1%' }} className=\"btn btn-primary btn-sm\" id=\"btn-manage-movies\" onClick={(e) => e.preventDefault() + this.setState({ showStep1: false })}>BACK</button>\r\n                                        <button className=\"btn btn-primary btn-sm\" id=\"btn-manage-movies\" onClick={this.onBtnSubmit}>SUBMIT</button>\r\n                                    </center>\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    <br />\r\n                                    <div className=\"title-edit-movies\">\r\n                                        <label>Title</label><div style={{ marginRight: '1%' }}>:</div>\r\n                                        <input style={this.state.showValidate ? { borderColor: this.state.title ? null : 'red' } : null} type=\"text\" className=\"form-control form-control-sm\" value={this.state.title} placeholder=\"Title our movies ?\" onChange={(e) => this.setState({ title: e.target.value })} />\r\n                                    </div>\r\n                                    <div className=\"title-edit-movies\">\r\n                                        <label>Duration</label><div style={{ marginRight: '1%' }}>:</div>\r\n                                        <input style={this.state.showValidate ? { borderColor: this.state.duration ? null : 'red' } : null} type=\"number\" className=\"form-control form-control-sm\" value={!this.state.duration ? '' : this.state.duration} placeholder=\"Duration our movies ?\" onChange={(e) => this.setState({ duration: e.target.value })} />\r\n                                    </div>\r\n                                    <div className=\"title-edit-movies\">\r\n                                        <label>Genre</label><div style={{ marginRight: '1%' }}>:</div>\r\n                                        <select style={this.state.showValidate ? { borderColor: this.state.genre ? null : 'red' } : null} className=\"form-control form-control-sm\" onChange={(e) => this.setState({ genre: e.target.value })}>\r\n                                            <option hidden disabled selected>{!this.state.genre ? 'Genre our movies ?' : this.state.genre}</option>\r\n                                            <option>Action</option>\r\n                                            <option>Comedy</option>\r\n                                            <option>Drama</option>\r\n                                            <option>Horror</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"title-edit-movies\">\r\n                                        <label>Synopsis</label><div style={{ marginRight: '1%' }}>:</div>\r\n                                        <textarea\r\n                                            className=\"form-control form-control-sm\"\r\n                                            id=\"exampleFormControlTextarea1\"\r\n                                            rows=\"5\"\r\n                                            value={this.state.synopsis}\r\n                                            onChange={(e) => this.setState({ synopsis: e.target.value })}\r\n                                            placeholder=\"Synopsis our movies ?\"\r\n                                            style={this.state.showValidate ? { borderColor: this.state.synopsis ? null : 'red' } : null}\r\n                                        />\r\n                                    </div>\r\n                                    <hr />\r\n                                    <center>\r\n                                        <button className=\"btn btn-primary btn-sm\" id=\"btn-manage-movies\" onClick={this.onBtnNext}>NEXT</button>\r\n                                    </center>\r\n                                </div>\r\n                        }\r\n\r\n\r\n                    </form>\r\n                </div >\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = ({ movies }) => {\r\n    return {\r\n        redirectMovies: movies.redirectMovies\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStatetoProps, { addMovies })(AddMovies);","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\ManageMovies\\Movies\\movies.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\ManageMovies\\EditMovies\\EditMovies.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\Admin\\Pages\\ManageMovies\\EditMovies\\editMovies.js",["154"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getMoviesById, editMovies } from '../../../../Redux/Action';\r\nimport { MDBIcon } from 'mdbreact';\r\nimport { API_URL } from '../../../../Helpers';\r\nimport './editMovies.css';\r\n\r\n\r\nclass EditMovies extends Component {\r\n\r\n    state = {\r\n        changeImage: false,\r\n        imagemovies: null,\r\n        previewImage: null,\r\n\r\n        title: '',\r\n        duration: 0,\r\n        genre: '',\r\n        synopsis: '',\r\n        casts: '',\r\n        producer: '',\r\n        director: '',\r\n        writter: '',\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let idmovies = this.props.location.search.split('=')[1];\r\n        this.props.getMoviesById(idmovies);\r\n    }\r\n\r\n    onChangeImage = (e) => {\r\n        if (e.target.files[0]) {\r\n            this.setState({\r\n                changeImage: true,\r\n                imagemovies: e.target.files[0],\r\n                previewImage: URL.createObjectURL(e.target.files[0])\r\n            })\r\n        }\r\n    }\r\n\r\n    onBtnEditMovies = () => {\r\n        this.props.dataMoviesById.map((item, index) => {\r\n            let idmovies = item.idmovies;\r\n            let changeImage = this.state.changeImage;\r\n            let imagemovies = this.state.imagemovies === null ? API_URL + item.imagemovies : this.state.imagemovies;\r\n            let title = !this.state.title ? item.title : this.state.title;\r\n            let duration = !this.state.duration ? item.duration : this.state.duration;\r\n            let genre = !this.state.genre ? item.genre : this.state.genre;\r\n            let synopsis = !this.state.synopsis ? item.synopsis : this.state.synopsis;\r\n            let casts = !this.state.casts ? item.casts : this.state.casts;\r\n            let producer = !this.state.producer ? item.producer : this.state.producer;\r\n            let director = !this.state.director ? item.director : this.state.director;\r\n            let writter = !this.state.writter ? item.writter : this.state.writter;\r\n            let dataMovies = { title, duration: parseInt(duration), genre, synopsis, casts, producer, director, writter, changeImage };\r\n            let redirectMovies = this.state.redirectMovies;\r\n            this.props.editMovies(idmovies, dataMovies, imagemovies, redirectMovies)\r\n        })\r\n    }\r\n\r\n    renderMoviesById = () => {\r\n        return this.props.dataMoviesById.map((item, index) => {\r\n            return (\r\n                <div className=\"section-edit-movies\">\r\n                    <div>\r\n                        {\r\n                            this.state.changeImage\r\n                                ?\r\n                                <img src={this.state.previewImage} alt=\"img-movies\" />\r\n                                :\r\n                                <img src={API_URL + item.imagemovies} alt=\"img-movies\" />\r\n                        }\r\n                        <div>\r\n                            <input type=\"file\" onChange={this.onChangeImage} className=\"img-movies-file\"  />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <div className=\"title-edit-movies\">\r\n                            <label>Title</label><div style={{ marginRight: '1%' }}>:</div>\r\n                            <input type=\"text\" defaultValue={item.title} className=\"form-control form-control-sm\" onChange={(e) => this.setState({ title: e.target.value })} />\r\n                        </div>\r\n                        <div className=\"title-edit-movies\">\r\n                            <label>Duration</label><div style={{ marginRight: '1%' }}>:</div>\r\n                            <input type=\"number\" defaultValue={item.duration} className=\"form-control form-control-sm\" onChange={(e) => this.setState({ duration: e.target.value })} />\r\n                        </div>\r\n                        <div className=\"title-edit-movies\" onChange={(e) => this.setState({ genre: e.target.value })}>\r\n                            <label>Genre</label><div style={{ marginRight: '1%' }}>:</div>\r\n                            <select className=\"form-control form-control-sm\">\r\n                                <option disabled selected hidden>{item.genre}</option>\r\n                                <option>Action</option>\r\n                                <option>Comedy</option>\r\n                                <option>Drama</option>\r\n                                <option>Horror</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"title-edit-movies\">\r\n                            <label>Synopsis</label><div style={{ marginRight: '1%' }}>:</div>\r\n                            <textarea\r\n                                className=\"form-control form-control-sm\"\r\n                                id=\"exampleFormControlTextarea1\"\r\n                                rows=\"3\"\r\n                                defaultValue={item.synopsis}\r\n                                onChange={(e) => this.setState({ synopsis: e.target.value })}\r\n                            />\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"title-edit-movies\">\r\n                            <label>Casts</label><div style={{ marginRight: '1%' }}>:</div>\r\n                            <textarea\r\n                                className=\"form-control form-control-sm\"\r\n                                id=\"exampleFormControlTextarea1\"\r\n                                rows=\"2\"\r\n                                defaultValue={item.casts}\r\n                                onChange={(e) => this.setState({ casts: e.target.value })}\r\n                                style={{ marginBottom: '1%' }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"title-edit-movies\">\r\n                            <label>Producer</label><div style={{ marginRight: '1%' }}>:</div>\r\n                            <input type=\"text\" defaultValue={item.producer} className=\"form-control form-control-sm\" onChange={(e) => this.setState({ producer: e.target.value })} />\r\n                        </div>\r\n                        <div className=\"title-edit-movies\">\r\n                            <label>Director</label><div style={{ marginRight: '1%' }}>:</div>\r\n                            <input type=\"text\" defaultValue={item.director} className=\"form-control form-control-sm\" onChange={(e) => this.setState({ director: e.target.value })} />\r\n                        </div>\r\n                        <div className=\"title-edit-movies\">\r\n                            <label>Writter</label><div style={{ marginRight: '1%' }}>:</div>\r\n                            <input type=\"text\" defaultValue={item.writter} className=\"form-control form-control-sm\" onChange={(e) => this.setState({ writter: e.target.value })} />\r\n                        </div>\r\n                        <hr/>\r\n                        <center>\r\n                            <div className=\"btn btn-primary btn-sm custom-edit-movies\" onClick={this.onBtnEditMovies}>SUBMIT</div>\r\n                        </center>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.props.redirectMovies){\r\n            return (\r\n                <Redirect to=\"managemovies\"></Redirect>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"card-manage-movies\">\r\n                    <div className=\"arrowback-manage-movies\">\r\n                        <Link to=\"managemovies\">\r\n                            <MDBIcon icon=\"arrow-left\" />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"title-manage-movies\">Manage Our Movies</div>\r\n                    <div >\r\n                        {this.renderMoviesById()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStatetoProps = ({ movies }) => {\r\n    return {\r\n        dataMoviesById: movies.dataMoviesById,\r\n        redirectMovies: movies.redirectMovies\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, { getMoviesById, editMovies })(EditMovies);","D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\Movie\\NowPlaying.js",[],"D:\\PROJECT HILMI\\REACT JS\\BIOSKOP\\bioskop\\src\\User\\Pages\\DetailMovie\\DetailMovie.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":30,"column":1,"nodeType":"161","endLine":60,"endColumn":2},{"ruleId":"162","severity":1,"message":"163","line":56,"column":59,"nodeType":"164","messageId":"165","endLine":56,"endColumn":61},{"ruleId":"159","severity":1,"message":"160","line":6,"column":1,"nodeType":"161","endLine":17,"endColumn":2},{"ruleId":"159","severity":1,"message":"160","line":10,"column":1,"nodeType":"161","endLine":29,"endColumn":2},{"ruleId":"166","severity":1,"message":"167","line":136,"column":49,"nodeType":"168","messageId":"169","endLine":136,"endColumn":54},{"ruleId":"166","severity":1,"message":"170","line":136,"column":56,"nodeType":"168","messageId":"169","endLine":136,"endColumn":64},{"ruleId":"166","severity":1,"message":"171","line":136,"column":66,"nodeType":"168","messageId":"169","endLine":136,"endColumn":71},{"ruleId":"166","severity":1,"message":"172","line":136,"column":73,"nodeType":"168","messageId":"169","endLine":136,"endColumn":81},{"ruleId":"166","severity":1,"message":"173","line":136,"column":83,"nodeType":"168","messageId":"169","endLine":136,"endColumn":88},{"ruleId":"166","severity":1,"message":"174","line":136,"column":90,"nodeType":"168","messageId":"169","endLine":136,"endColumn":98},{"ruleId":"166","severity":1,"message":"175","line":136,"column":100,"nodeType":"168","messageId":"169","endLine":136,"endColumn":108},{"ruleId":"166","severity":1,"message":"176","line":136,"column":110,"nodeType":"168","messageId":"169","endLine":136,"endColumn":117},{"ruleId":"162","severity":1,"message":"163","line":44,"column":53,"nodeType":"164","messageId":"165","endLine":44,"endColumn":55},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'title' is assigned a value but never used.","Identifier","unusedVar","'duration' is assigned a value but never used.","'genre' is assigned a value but never used.","'synopsis' is assigned a value but never used.","'casts' is assigned a value but never used.","'producer' is assigned a value but never used.","'director' is assigned a value but never used.","'writter' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]